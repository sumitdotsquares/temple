#!/usr/bin/perl

use strict;
use CGI qw/:all/;
use CGI::Pretty;
use CGI::Carp 'fatalsToBrowser';
use Text::CSV;
use URI;

my @pwuid = getpwuid($<);
my $owner = $pwuid[0];
my $homedir = $pwuid[7];

my $docroot = $ENV{'DOCUMENT_ROOT'};
unless ($docroot) { $docroot = '/imports/www/phys-develop'; }

my @areas = get_folder('/research/groups'); # relative to $docroot

my $title;

for (@areas) { 
	next unless (-e $docroot . '/research/groups/' . $_ . '/.title'); 
	$title->{$_} = getvalue($docroot . '/research/groups/' . $_ . '/.title'); 
	chomp $title->{$_};
}




print "<ul>\n";
for (sort { $title->{$a} cmp $title->{$b} } keys %$title) { print "<li><a href='/research/groups/$_'>$title->{$_}</a></li>\n"; }
print "</ul>\n\n"; 





#############################

sub getvalue {
	my $file = $_[0];
	return unless (-e $file);
	open FILE, '<', $file;
	my @lines = <FILE>;
	close FILE;
	return join '', @lines;
}


sub get_folder {
	# $dir is relative to $docroot without leading and trailing /
	my $dir = $_[0];
        # if not, remove leading and trailing /
        $dir =~ s/^\///;
        $dir =~ s/\/$//;
	return unless (-d $docroot . '/' . $dir);
	my $order = get_order($dir);
	opendir DIR, $docroot . '/' . $dir;
	my @dirs = readdir DIR;
	closedir DIR;
	my @navbar;
	for (@dirs) { 
		next if (/^\./);
		my $activated = is_active($dir . '/' . $_);
		if ($activated) { push @navbar, $_; }
	}
	return sort { $order->{$a} <=> $order->{$b} } @navbar;
}

sub get_menu {
        # $dir is relative to $docroot i.e. is REQUEST_URI without leading and trailing /
	my $dir = $_[0];
        # if not, remove leading and trailing /
        $dir =~ s/^\///;
        $dir =~ s/\/$//;
	return unless (-e $docroot . '/' . $dir . '/.title');
	my $title = getvalue($docroot . '/' . $dir . '/.title');
	return unless ($title);
	# num=1 corresponds to top-level dirs inside docroot
        my $num = getnum($dir)+1; # get the depth of $dir in filetree
        my @ul;
        opendir DIR, $docroot . '/' . $dir;
        my @dirs = readdir DIR;
        closedir DIR;
        my @navbar;
        for (@dirs) {
                next if (/^\./);
                next unless (-d $docroot . '/' .  $dir . '/' . $_);
		next unless (is_active($dir . '/' . $_));
                push @navbar, $_;
        }
        my $order = get_order($dir);
	@navbar =  sort { $order->{$a} <=> $order->{$b} } @navbar;
	my $grid = $#navbar+1;
        if (@navbar) { $grid = int(12/$grid); }
        for (@navbar) {
                my ($t,@subul) = get_menu($dir . '/' . $_);
                if ((@subul) and ($num == 1)) { push @ul, li({-class=>'dropdown col-xs-'.$grid},$t."\n".ul(@subul)); }
                elsif (@subul) { push @ul, li({-class=>'dropdown'},$t."\n".ul(@subul)); }
                elsif ($num == 1) { push @ul, li({-class=>'col-xs-'.$grid},$t); }
                else { push @ul, li($t); }
        }
	my $target = '_blank';
	if ($num <= 3) { $target = '_self'; }
        if ((-e $docroot . '/' . $dir . '/index.html') and (@ul)) { return (a({-href=>'/'.$dir,-target=>$target},$title),@ul); }
        elsif (@ul) { return ($title,@ul); }
        elsif (-e $docroot . '/' . $dir . '/index.html') { return (a({-href=>'/'.$dir,-target=>$target},$title),()); }
        else { return ($title,()); }
}


sub getnum {
	# $dir relative to $docroot with leading and trailing /
        my $dir = $_[0];
        my @components = split '/', $dir;
        return $#components;
}
           

sub is_active {
	# $dir is relative to $docroot without leading and trailing /
	my $dir = $_[0];
        # if not, remove leading and trailing /
        $dir =~ s/^\///;
        $dir =~ s/\/$//;
	return unless (-d $docroot . '/' . $dir);
	return unless (-e $docroot . '/' . $dir . '/.title');
	$dir =~ /^(.*?)(\/|$)/;
	return $1;
}

sub get_order {
        # $dir is relative to $docroot without leading and trailing /
	my $dir = $_[0];
 	# if not, remove leading and trailing /
	$dir =~ s/^\///;
	$dir =~ s/\/$//;
	my $order;
        return unless (-d $docroot . '/' . $dir);
	opendir DIR, $docroot . '/' . $dir;
	my @dirs = readdir DIR;
	closedir DIR;
	for (@dirs) {
		next if (/^\./);
		next unless (-d $docroot . '/' . $dir . '/' . $_);
		$order->{$_} = 1000; 
	}
        return $order unless (-e $docroot . '/' . $dir . '/.order');
	open FILE, $docroot . '/' . $dir . '/.order';
	my @dirs = <FILE>;
	close FILE;
	chomp @dirs;
	for (0..$#dirs) { $order->{$dirs[$_]} = $_+1; }
	return $order;
}
